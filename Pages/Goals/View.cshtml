@page "{id:int}"
@model MetasAhorro.Pages.Goals.ViewModel
@using System.Globalization
@{
    var g = Model.Goal!;
    var culture = new CultureInfo("es-DO");
    ViewData["Title"] = g.Title;

    var labels = string.Join(",", Model.Timeline.Select(d => $"\"{d.Date:dd/MM}\""));
    decimal running = g.InitialAmount;
    var series = new List<decimal>();
    foreach (var d in Model.Timeline) { running += d.Amount; series.Add(running); }
    var data = string.Join(",", series.Select(v => v.ToString(CultureInfo.InvariantCulture)));

    var daysLeft = (g.Deadline.Date - DateTime.Today).Days;
    var statusText = g.ProgressPct >= 100 ? "Completada" : (daysLeft >= 0 ? $"Faltan {daysLeft} días" : $"Vencida hace {Math.Abs(daysLeft)} días");
    var totalDepositos = Model.Timeline.Sum(x => x.Amount);
}

<style>
  .modal { display: none; }
  .modal:target { display: block; }
</style>

<div class="max-w-5xl mx-auto">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 mb-4">
        <nav class="text-sm text-gray-500">
            <a asp-page="Index" class="hover:underline">Metas</a>
            <span class="mx-1">/</span>
            <span class="text-gray-700 font-medium">@g.Title</span>
        </nav>

        <div class="flex flex-wrap gap-2">
            <a asp-page="Index"
               class="inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-gray-300 text-gray-700 hover:bg-gray-100">
                <i class="bi bi-arrow-left"></i> Volver
            </a>
            <a asp-page="Edit" asp-route-id="@g.Id"
               class="inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-indigo-200 text-indigo-700 bg-indigo-50 hover:bg-indigo-100">
                <i class="bi bi-pencil-square"></i> Editar
            </a>
            <a asp-page="Deposit" asp-route-id="@g.Id"
               class="inline-flex items-center gap-2 px-4 py-2 rounded-xl text-white bg-indigo-600 hover:bg-indigo-700">
                <i class="bi bi-piggy-bank-fill"></i> Depositar
            </a>
            <a href="#confirm-@g.Id"
               class="inline-flex items-center gap-2 px-4 py-2 rounded-xl text-white bg-red-600 hover:bg-red-700">
                <i class="bi bi-trash3"></i> Eliminar
            </a>
        </div>
    </div>

    <div class="bg-white shadow rounded-2xl p-8">
        <div class="flex items-start justify-between gap-4">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">@g.Title</h1>
                @if (!string.IsNullOrWhiteSpace(g.Description))
                {
                    <p class="text-gray-600 mt-1">@g.Description</p>
                }
            </div>
            <div class="text-right">
                <span class="inline-block px-3 py-1 rounded-full text-sm 
                    @(g.ProgressPct >= 100 ? "bg-emerald-100 text-emerald-700" 
                      : (daysLeft >= 0 ? "bg-blue-100 text-blue-700" : "bg-rose-100 text-rose-700"))">
                    <i class="bi bi-circle-half"></i> @statusText
                </span>
            </div>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-4 gap-4 mt-6">
            <div class="rounded-xl border border-gray-200 p-4">
                <p class="text-xs text-gray-500">Objetivo</p>
                <p class="text-lg font-semibold text-gray-900">RD$ @g.TargetAmount.ToString("N2", culture)</p>
            </div>
            <div class="rounded-xl border border-gray-200 p-4">
                <p class="text-xs text-gray-500">Acumulado</p>
                <p class="text-lg font-semibold text-indigo-700">RD$ @g.CurrentAmount.ToString("N2", culture)</p>
            </div>
            <div class="rounded-xl border border-gray-200 p-4">
                <p class="text-xs text-gray-500">Faltante</p>
                <p class="text-lg font-semibold text-fuchsia-700">RD$ @g.Remaining.ToString("N2", culture)</p>
            </div>
            <div class="rounded-xl border border-gray-200 p-4">
                <p class="text-xs text-gray-500">Cuota mensual</p>
                <p class="text-lg font-semibold text-gray-900">RD$ @g.MonthlyNeeded.ToString("N2", culture)</p>
                <p class="text-xs text-gray-500 mt-1">
                    Hasta @g.Deadline.ToString("dd/MM/yyyy")
                </p>
            </div>
        </div>

        <div class="mt-6">
            <div class="w-full bg-gray-200 rounded-full h-4 overflow-hidden">
                <div class="bg-gradient-to-r from-indigo-600 to-fuchsia-600 h-4 rounded-full"
                     style="width:@g.ProgressPct%"></div>
            </div>
            <p class="mt-1 text-xs text-gray-500">@Math.Round(g.ProgressPct)% completado</p>
        </div>

        <hr class="my-6" />

        <h3 class="text-lg font-semibold text-gray-900 mb-2">Progreso en el tiempo</h3>
        <div class="relative h-64 md:h-72">
            <canvas id="progressChart" class="absolute inset-0 w-full h-full"></canvas>
        </div>

        <div class="mt-6 overflow-x-auto">
            <table class="w-full text-sm text-left border border-gray-200 rounded-lg">
                <thead class="bg-gray-100 text-gray-700 font-medium">
                    <tr>
                        <th class="px-4 py-2">Fecha</th>
                        <th class="px-4 py-2">Monto</th>
                        <th class="px-4 py-2">Nota</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    @if (Model.Timeline.Count == 0)
                    {
                        <tr>
                            <td colspan="3" class="px-4 py-6 text-center text-gray-500">
                                <i class="bi bi-inbox"></i> Aún no hay depósitos registrados.
                            </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var d in Model.Timeline)
                        {
                            <tr>
                                <td class="px-4 py-2">@d.Date.ToString("dd/MM/yyyy")</td>
                                <td class="px-4 py-2">RD$ @d.Amount.ToString("N2", culture)</td>
                                <td class="px-4 py-2">@d.Note</td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot class="bg-gray-50">
                    <tr>
                        <td class="px-4 py-2 font-medium text-gray-700">Total depositado</td>
                        <td class="px-4 py-2 font-semibold text-gray-900">RD$ @totalDepositos.ToString("N2", culture)</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div id="confirm-@g.Id" class="modal fixed inset-0 z-50">
    <a href="#" class="absolute inset-0 bg-black/50 backdrop-blur-sm"></a>
    <div class="relative mx-auto mt-24 w-full max-w-md px-4">
        <div class="rounded-2xl bg-white shadow-2xl border border-gray-100 overflow-hidden">
            <div class="p-6">
                <div class="flex items-start gap-3">
                    <i class="bi bi-exclamation-triangle-fill text-red-600 text-2xl shrink-0"></i>
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900">Eliminar meta</h3>
                        <p class="mt-1 text-sm text-gray-600">
                            ¿Seguro que quieres eliminar <span class="font-medium text-gray-900">“@g.Title”</span>?
                            Esta acción no se puede deshacer.
                        </p>
                        <ul class="mt-3 text-xs text-gray-500 space-y-1">
                            <li>Objetivo: <span class="font-medium text-gray-900">RD$ @g.TargetAmount.ToString("N2", culture)</span></li>
                            <li>Acumulado: <span class="font-medium text-gray-900">RD$ @g.CurrentAmount.ToString("N2", culture)</span></li>
                            <li>Faltante: <span class="font-medium text-gray-900">RD$ @g.Remaining.ToString("N2", culture)</span></li>
                        </ul>
                    </div>
                </div>

                <div class="mt-6 flex gap-3">
                    <form method="post"
                          asp-page-handler="Delete"
                          asp-route-id="@g.Id"
                          asp-antiforgery="true"
                          class="flex-1">
                        <button type="submit"
                                class="w-full inline-flex items-center justify-center gap-2 px-4 py-2.5 rounded-lg bg-red-600 text-white font-semibold hover:bg-red-700 transition">
                            <i class="bi bi-trash3"></i> Sí, eliminar
                        </button>
                    </form>
                    <a href="#"
                       class="flex-1 inline-flex items-center justify-center gap-2 px-4 py-2.5 rounded-lg border border-gray-300 text-gray-700 font-semibold hover:bg-gray-100 transition">
                        Cancelar
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('progressChart');
    const chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [@Html.Raw(labels)],
            datasets: [{
                label: 'Acumulado',
                data: [@Html.Raw(data)],
                borderColor: '#4f46e5',
                backgroundColor: 'rgba(79,70,229,0.10)',
                pointRadius: 2,
                pointHoverRadius: 4,
                borderWidth: 2,
                tension: 0.3,
                fill: true
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            layout: { padding: { left: 0, right: 8, top: 8, bottom: 8 } },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: { drawBorder: false },
                    ticks: {
                        callback: function(value) {
                            return new Intl.NumberFormat('es-DO', { 
                                style: 'currency', currency: 'DOP',
                                minimumFractionDigits: 0, maximumFractionDigits: 0
                            }).format(value);
                        }
                    }
                },
                x: { grid: { display: false } }
            },
            plugins: {
                legend: { display: false },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let val = context.raw;
                            return new Intl.NumberFormat('es-DO', { 
                                style: 'currency', currency: 'DOP',
                                minimumFractionDigits: 0, maximumFractionDigits: 0
                            }).format(val);
                        }
                    }
                }
            }
        }
    });
</script>
}
